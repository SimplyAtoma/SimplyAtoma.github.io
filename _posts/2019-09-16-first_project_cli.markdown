---
layout: post
title:      "First Project, CLI"
date:       2019-09-16 04:54:15 +0000
permalink:  first_project_cli
---


Hello, my name is Hector Rodriguez Duenas, I am a student at **Flatiron School** and our first major project was to create an app that scrapes information from a website. They gave us some exaple ideas and I went with one example, a program that scrapes movies from a webite and gives the users that information. A simple program but still one that is hard if you do not exactly know what you are doing. In this I will be going through my mindset during the coding process and how i managed to pull together a code that accomplishes part of what I want. Of course I plan on revisting this program to a add more functionality and  make my code cleaner.
At first I had some trouble I had no idea how to start a gem from scratch so I had to do some research and found that Flatiron provided a video to help with creating the *CLI*, Command Line Interface, and how to set up your gem with the bundler.  The hardest part for me was setting up the environment for my code to actually execute properly. i watched the Flatiron video muiltple times trying to drill it into memory but i feel like i still need to practice more with my gem specs, and what gems and requires are suppose to go. 
After this the next part that was a real head scratcher from me was how to navigate the website and where I should be pulling my information from. At first I tried pulling from a url extention called */movie-playing-in-theaters* and that gave me a huge headache cause that code was more complicated than just the home page. From there I took a little break to contemplate where i should be going with the code, and I unfortunatly could not come up with an answer. I resorted to google and  lucky I found some tutorials and found that fandango.com uses an *a* class and has multiple attachments to set the movie title and the poster of the movie to give the user an easy time to find the movie or name of a movie they were looking for. I found the title I wanted but that was only one of many, so I had to look for some way to find all of the movie posters and get them passed into an array for me to parse through. I did this using '.search(div.fluid.poster)' wich was the designation for each of the movie posters. Then Boom my work was working as I wanted it to.
I did leave some variables in the code that represnt if tickets for the specified user movie were still available. This being my first ruby program gave me a lot of fun ideas to play around with in Ruby and hopefully its just the start, and I hope I get better with getting my code "D.R.Y." and find cool ways to get what I want my progam to do.
